{
  "version": 3,
  "sources": [
    "/init-server.js"
  ],
  "names": [
    "logsSchema",
    "object",
    "keys",
    "console",
    "boolean",
    "default",
    "apiConfigurationSchema",
    "name",
    "string",
    "required",
    "version",
    "routes",
    "array",
    "items",
    "hasDocumentation",
    "usesAuthentication",
    "authenticationStrategies",
    "min",
    "validate",
    "func",
    "globalTimeout",
    "number",
    "integer",
    "configurationSchema",
    "logs",
    "api",
    "server",
    "connections",
    "initServer",
    "rawConfiguration",
    "configuration",
    "err",
    "value",
    "logsConfiguration",
    "apiConfiguration",
    "plugins",
    "transports",
    "push",
    "Console",
    "json",
    "logger",
    "Logger",
    "Server",
    "forEach",
    "connection",
    "hapiSwaggerConfiguration",
    "info",
    "title",
    "require",
    "register",
    "options",
    "ext",
    "request",
    "reply",
    "response",
    "undefined",
    "path",
    "indexOf",
    "continue",
    "isBoom",
    "output",
    "statusCode",
    "log",
    "error",
    "status",
    "payload",
    "toLowerCase",
    "code",
    "source",
    "extend",
    "Error",
    "Promise",
    "resolve",
    "authenticationStrategy",
    "auth",
    "strategy",
    "validateFunc",
    "route",
    "config",
    "timeout",
    "tags",
    "initHandler",
    "handler",
    "causedBy",
    "JSON",
    "stringify",
    "wrap"
  ],
  "mappings": "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",
  "file": "/init-server.js",
  "sourcesContent": [
    "import './init'\nimport Hapi from 'hapi'\nimport slugify from 'slugify'\nimport _ from 'lodash'\nimport Joi from 'joi'\nimport winston from 'winston'\nimport serializeError from 'serialize-error'\nimport Boom from 'boom'\nimport ConfigurationError from './error/init-server/configuration-error'\nimport PluginRegistrationError from './error/init-server/plugin-registration-error'\nimport UncaughtError from './error/init-server/uncaught-error'\n\nconst logsSchema = Joi.object().keys({\n  console: Joi.boolean().default(true)\n}).default({\n  console: true\n})\n\nconst apiConfigurationSchema = Joi.object({\n  name: Joi.string().required(),\n  version: Joi.string().required(),\n  routes: Joi.array().items(Joi.object()),\n  hasDocumentation: Joi.boolean().default(false),\n  usesAuthentication: Joi.boolean().default(false),\n  authenticationStrategies: Joi.array().items(Joi.object().keys({\n    name: Joi.string().required().min(1),\n    validate: Joi.func().required()\n  })),\n  globalTimeout: Joi.number().integer().min(0).default(2000)\n})\n\nconst configurationSchema = Joi.object().keys({\n  logs: logsSchema,\n  api: apiConfigurationSchema.required(),\n  server: Joi.object().keys({\n    connections: Joi\n      .array()\n      .min(1)\n      .required()\n  }).required()\n})\n\nfunction initServer(rawConfiguration) {\n  let configuration\n\n  Joi.validate(\n    { configuration: rawConfiguration },\n    { configuration: configurationSchema.required() },\n    (err, value) => {\n      if (err) {\n        throw new ConfigurationError('', err)\n      }\n\n      configuration = value.configuration\n    }\n  )\n\n  const logsConfiguration = configuration.logs\n  const apiConfiguration = configuration.api\n  const globalTimeout = configuration.api.globalTimeout\n  const connections = configuration.server.connections\n  const plugins = []\n  const transports = []\n\n  if (logsConfiguration.console) {\n    transports.push(new (winston.transports.Console)({\n      json: true\n    }))\n  }\n\n  const logger = new (winston.Logger)({\n    transports\n  })\n\n  const server = new Hapi.Server()\n\n  connections.forEach((connection) => {\n    server.connection(connection)\n  })\n\n  if (apiConfiguration.hasDocumentation) {\n    const hapiSwaggerConfiguration = {\n      info: {\n        title: apiConfiguration.name + ' documentation',\n        version: apiConfiguration.version,\n      }\n    }\n\n    plugins.push(require('inert'))\n    plugins.push(require('vision'))\n    plugins.push(\n      {\n        register: require('hapi-swagger'),\n        options: hapiSwaggerConfiguration\n      }\n    )\n  }\n\n  if (apiConfiguration.usesAuthentication) {\n    plugins.push(require('hapi-auth-basic'))\n  }\n\n  server.ext('onPreResponse', function (request, reply) {\n    const response = request.response\n\n    if (undefined !== response.request && response.request.path.indexOf('/api') !== 0) {\n      return reply.continue()\n    }\n\n    if (response.isBoom) {\n      if (500 === response.output.statusCode) {\n        logger.log(\n          'error',\n          'Uncaught internal server error',\n          { error: serializeError(response) }\n        )\n      } else if (503 === response.output.statusCode) {\n        logger.log(\n          'error',\n          'Service unavailable',\n          { error: serializeError(response) }\n        )\n      }\n\n      return reply(\n        {\n          status: slugify(response.output.payload.error, '_').toLowerCase()\n        }\n      )\n        .code(response.output.statusCode)\n    } else {\n      const statusCode = response.statusCode\n\n      if (200 === statusCode) {\n        let source\n\n        if (null === response.source) {\n          source = { status: 'success' }\n        } else {\n          source = _.extend({ status: 'success' }, response.source)\n        }\n\n        return reply(source)\n      }\n    }\n\n    throw new Error('Unhandled response.')\n  })\n\n  return new Promise((resolve) => {\n    server.register(\n      plugins,\n      (err) => {\n        if (err) {\n          throw new PluginRegistrationError('', err)\n        }\n\n        if (apiConfiguration.usesAuthentication) {\n          apiConfiguration.authenticationStrategies.forEach(function (authenticationStrategy) {\n            server.auth.strategy(authenticationStrategy.name, 'basic', { validateFunc: authenticationStrategy.validate })\n          })\n        }\n\n        const routes = apiConfiguration.routes\n\n        if (undefined !== routes) {\n          routes.forEach((route) => {\n            if (undefined === route.config) {\n              route.config = {}\n            }\n\n            if (undefined === route.config.timeout) {\n              route.config.timeout = {}\n            }\n\n            if (undefined === route.config.timeout.server) {\n              route.config.timeout.server = globalTimeout\n            }\n\n            if (undefined === route.config.tags) {\n              route.config.tags = []\n            }\n\n            if (route.config.tags.indexOf('api') === -1) {\n              route.config.tags.push('api')\n            }\n\n            /**\n             * Works around a bug.\n             * To reproduce this bug:\n             * * throw an exception in a handler\n             * * next try another request: it hangs\n             * * abort\n             * * try another request: this one does not hang\n             *\n             * I could not reproduce easily reproduce this with tests.\n             *\n             * TODO Reproduce this in tests\n             */\n            const initHandler = route.handler\n\n            route.handler = (request, reply) => {\n              try {\n                return initHandler(request, reply)\n              } catch (err) {\n                let causedBy\n\n                if (err instanceof Error) {\n                  causedBy = err\n                } else {\n                  causedBy = new Error(JSON.stringify({ 'isNotError': true, err: err }))\n                }\n\n                return reply(\n                  Boom.wrap(\n                    new UncaughtError('', causedBy)\n                  )\n                )\n              }\n            }\n            /** End of workaround */\n\n            server.route(route)\n          })\n        }\n\n        resolve(server)\n      }\n    )\n  })\n}\n\nexport default initServer"
  ]
}
